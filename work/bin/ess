#!/usr/bin/perl

use XML::Simple;
use Getopt::Long;

my $feed;
{
    open my $pipe, '-|', 'wget -o /dev/null -O - http://ess.tv/ess.rss';
    my $text = do { local $/; <$pipe> };
    close $pipe or die "wget died: $!\n";
    $feed = XMLin($text) or die "Couldn't parse XML\n";
}


sub select_show {
    my ($crit) = @_;
    if ($crit =~ /\d+/) {
        return $crit-1;
    }
    else {
        my @matches;
        for my $i (0..@{$feed->{channel}{item}}-1) {
            if ($feed->{channel}{item}[$i]{description} =~ /$crit/i) {
                push @matches, $i;
            }
        }
        if (@matches == 0) {
            print "No match found for '$crit'\n";
            exit 1;
        }
        else {
            return @matches;
        }
    }
}

sub show_desc {
    my ($num) = @_;
    print $feed->{channel}{item}[$num]{description}, "\n";
}

sub show_title {
    my ($num) = @_;
    printf "ESS %02d: %s\n", $num+1, $feed->{channel}{item}[$num]{title}, "\n";
}

sub usage {
    print <<EOU;
Usage: ess command [args]
  Commands:
  ess watch <criterion>      Watch the specified show
  ess schedule [criterion]   Show what is playing on the given channel 
                             or on all channels if not specified
EOU
    exit;
}


my $options = GetOptions();

my $cmd = shift;
if ($cmd eq 'watch' || $cmd eq 'w') {
    my $show = shift or usage;
    my @shows = select_show($show);
    if (@shows > 1) {
        print "Multiple shows found for criterion '$show'\n";
        exit 1;
    }
    my $link = $feed->{channel}{item}[$shows[0]]{link};
    $link =~ s/\/listen.pls$//;
    exec "mplayer -cache 512 '$link'";
    die "couldn't fork mplayer: $!\n";
}
elsif ($cmd eq 'schedule' || $cmd eq 's') {
    if (my $show = shift) {
        my @shows = select_show($show);
        show_title($_) for @shows;
    }
    else {
        for (0..@{$feed->{channel}{item}}-1) {
            show_title($_);
        }
    }
}

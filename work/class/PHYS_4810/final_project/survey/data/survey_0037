$VAR1 = {
          'con-pretest' => 'pre-test',
          'con-break' => 'break',
          'con-equality' => '==',
          'con-switch_default' => 'default',
          'app-equality_explain' => '== != =',
          'app-overload' => 'A',
          'con-overload' => 'same-name-different-param',
          'studentid' => 'testing',
          'app-pretest' => '0',
          'app-overload_explain' => 'overloaded foo has a foo(int) variant, and foo is called with an int',
          'con-signature' => {
                               'params' => 'base,amount',
                               'types' => 'char,int',
                               'returns' => 'char',
                               'name' => 'alphabet_add'
                             },
          'con-shortcircuit' => 'true',
          'SEED' => 86267,
          'app-switch' => {
                            'case3' => 'case 3:',
                            'case2' => 'case 2:',
                            'default' => 'default:',
                            'case1' => 'case 1:'
                          },
          'con-divide' => {
                            'declare' => 'on',
                            'characterization' => 'the value of the expression is a float if either operand is'
                          },
          'app-equality' => '0',
          'app-break' => '1 2 4 8 16',
          'app-signature' => 'error: to_integer expects an int, but is called with a string',
          'app-shortcircuit_explain' => 'x is never incremented due to the short-circuit propery of ||',
          'app-shortcircuit' => 'Good 09',
          'fullname' => 'just',
          'app-pretest_explain' => 'the body of the for loop never executes (i>0 initially)',
          'app-divide' => '1.25',
          'app-divide_explain' => 'the value of a product with a float as one member is a float'
        };
